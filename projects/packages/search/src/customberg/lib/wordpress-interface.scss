/**
 * These styles are copied directly from @wordpress/interface
 * in order to remove our dependency on this experimental package.
 *
 * TODO: Replace these styles with our own styles.
 */

@use '@wordpress/base-styles/breakpoints';
@use '@wordpress/base-styles/colors';
@use "@wordpress/base-styles/mixins";
@use "@wordpress/base-styles/variables";
@use "@wordpress/base-styles/z-index";

// complementary-area-header
.components-panel__header.interface-complementary-area-header__small {
	background: colors.$white;
	padding-right: variables.$grid-unit-05;

	.interface-complementary-area-header__small-title {
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
		width: 100%;
	}

	@include mixins.break-medium() {
		display: none;
	}
}

.interface-complementary-area-header {
	background: colors.$white;
	padding-right: variables.$grid-unit-05;
}

// complementary-area
.interface-complementary-area {
	background: colors.$white;
	color: colors.$gray-900;

	@include mixins.break-small() {
		-webkit-overflow-scrolling: touch;
	}

	@include mixins.break-medium() {
		width: variables.$sidebar-width;
	}

	.components-panel {
		border: none;
		// Make a stacking context that keeps all descendents behind the sticky header
		position: relative;
		z-index: z-index.z-index( '.interface-complementary-area .components-panel' );
	}

	.components-panel__header {
		position: sticky;
		top: 0;
		z-index: z-index.z-index( '.interface-complementary-area .components-panel__header' );

		&.edit-post-sidebar__panel-tabs {
			top: variables.$panel-header-height;

			@include mixins.break-medium() {
				top: 0;
			}
		}
	}

	p {
		margin-top: 0;
	}

	h2,
	h3 {
		font-size: variables.$default-font-size;
		color: colors.$gray-900;
		margin-bottom: 1.5em;
	}

	hr {
		border-top: none;
		border-bottom: 1px solid colors.$gray-100;
		margin: 1.5em 0;
	}

	div.components-toolbar-group,
	div.components-toolbar {
		box-shadow: none;
		margin-bottom: 1.5em;

		&:last-child {
			margin-bottom: 0;
		}
	}

	.block-editor-skip-to-selected-block:focus {
		top: auto;
		right: 10px;
		bottom: 10px;
		left: auto;
	}
}

// fullscreen-mode
body.js.is-fullscreen-mode {

	@include mixins.break-medium {
		// Reset the html.wp-topbar padding.
		// Because this uses negative margins, we have to compensate for the height.
		margin-top: -1 * variables.$admin-bar-height;
		height: calc( 100% + #{variables.$admin-bar-height} );

		#adminmenumain,
		#wpadminbar {
			display: none;
		}

		#wpcontent,
		#wpfooter {
			margin-left: 0;
		}
	}
}

// interface-skeleton

// On Mobile devices, swiping the HTML element should not scroll.
// By making it fixed, we prevent that.
html.interface-interface-skeleton__html-container {
	position: fixed;
	width: 100%;

	@include mixins.break-medium() {
		position: initial;
		width: initial;
	}
}

.interface-interface-skeleton {
	display: flex;
	flex-direction: row;
	height: auto;
	max-height: 100%;

	// Fill the available space on Mobile.
	position: fixed;
	top: variables.$admin-bar-height-big;
	left: 0;
	right: 0;
	bottom: 0;

	// Adjust to admin-bar going small.
	@media (min-width: #{ (breakpoints.$break-medium + 1) }) {
		top: variables.$admin-bar-height;

		.is-fullscreen-mode & {
			top: 0;
		}
	}
}

.interface-interface-skeleton__editor {
	display: flex;
	flex-direction: column;
	flex: 0 1 100%;
	overflow: hidden;
}

@include mixins.editor-left( '.interface-interface-skeleton' );

.interface-interface-skeleton__secondary-sidebar,
.interface-interface-skeleton__sidebar {
	display: block;
	flex-shrink: 0;
	position: absolute;
	z-index: z-index.z-index( '.interface-interface-skeleton__sidebar' );
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background: colors.$white;
	color: colors.$gray-900;

	// On Mobile the header is fixed to keep HTML as scrollable.
	@include mixins.break-medium() {
		position: relative !important;
		z-index: z-index.z-index( '.interface-interface-skeleton__sidebar {greater than small}' );
		width: auto; // Keep the sidebar width flexible.
	}
}

.interface-interface-skeleton__sidebar {
	overflow: auto;

	@include mixins.break-medium() {
		border-left: variables.$border-width solid colors.$gray-200;
	}
}

.interface-interface-skeleton__secondary-sidebar {

	@include mixins.break-medium() {
		border-right: variables.$border-width solid colors.$gray-200;
	}
}

.interface-interface-skeleton__header {
	flex-shrink: 0;
	height: auto; // Keep the height flexible.
	border-bottom: variables.$border-width solid colors.$gray-200;
	z-index: z-index.z-index( '.interface-interface-skeleton__header' );
	color: colors.$gray-900;
}

.interface-interface-skeleton__footer {
	height: auto; // Keep the height flexible.
	flex-shrink: 0;
	border-top: variables.$border-width solid colors.$gray-200;
	color: colors.$gray-900;
	position: absolute;
	bottom: 0;
	left: 0;
	width: 100%;
	background-color: colors.$white;
	z-index: z-index.z-index( '.interface-interface-skeleton__footer' );

	// On Mobile the footer is hidden
	display: none;

	@include mixins.break-medium() {
		display: flex;
	}

	.block-editor-block-breadcrumb {
		z-index: z-index.z-index( '.edit-post-layout__footer' );
		display: flex;
		background: colors.$white;
		height: variables.$button-size-small;
		align-items: center;
		font-size: variables.$default-font-size;
		padding: 0 ( variables.$grid-unit-15 + 6px );
	}
}

.interface-interface-skeleton__actions {
	z-index: z-index.z-index( '.interface-interface-skeleton__actions' );
	position: fixed !important; // Need to override the default relative positioning
	top: -9999em;
	bottom: auto;
	left: auto;
	right: 0;
	width: variables.$sidebar-width;
	color: colors.$gray-900;

	&:focus {
		top: auto;
		bottom: 0;
	}
}

// more-menu-dropdown
.interface-more-menu-dropdown {
	margin-left: -4px;

	// the padding and margin of the more menu is intentionally non-standard
	.components-button {
		width: auto;
		padding: 0 2px;
	}

	@include mixins.break-small() {
		margin-left: 0;

		.components-button {
			padding: 0 4px;
		}
	}
}

.interface-more-menu-dropdown__content .components-popover__content {
	min-width: 280px;

	// Let the menu scale to fit items.
	@include mixins.break-mobile() {
		width: auto;
		max-width: breakpoints.$break-mobile;
	}

	.components-dropdown-menu__menu {
		padding: 0;
	}
}

.components-popover.interface-more-menu-dropdown__content {
	z-index: z-index.z-index( '.components-popover.interface-more-menu__content' );
}

// pinned-items
.interface-pinned-items {
	display: flex;

	// We intentionally hide pinned items (plugins) on mobile, and unhide them at desktop breakpoints.
	// Otherwise the list can wreak havoc on the layout.
	.components-button:not( :first-child ) {
		display: none;

		@include mixins.break-small() {
			display: flex;
		}
	}

	.components-button {
		margin-left: variables.$grid-unit-05;

		svg {
			max-width: variables.$icon-size;
			max-height: variables.$icon-size;
		}
	}
}
